@model DDX.OrderManagementSystem.Domain.OrderType
@{
  
}
<link href="@Url.Content("~/Scripts/uploadify/uploadify.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/uploadify/jquery.uploadify-3.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/kindeditor/kindeditor-min.js")"></script>
<script type="text/javascript">
    $.extend($.fn.datagrid.defaults.editors, {
        combogrid: {
            init: function (container, options) {
                var input = $('<input type="text" class="datagrid-editable-input">').appendTo(container);
                input.combogrid(options);
                return input;
            },
            destroy: function (target) {
                $(target).combogrid('destroy');
            },
            getValue: function (target) {
                return $(target).combogrid('getValue');
            },
            setValue: function (target, value) {
                $(target).combogrid('setValue', value);
            },
            resize: function (target, width) {
                $(target).combogrid('resize', width);
            }
        }
    });
    var editor;
    var editor2;
    var editor3;
    KindEditor.ready(function (K) {
        editor = K.create('#e_BuyerMemo', {
            resizeType: 1,
            allowPreviewEmoticons: false,
            allowImageUpload: false,
            items: [
                'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold', 'italic', 'underline',
                'removeformat', '|', 'justifyleft', 'justifycenter', 'justifyright', 'insertorderedlist',
                'insertunorderedlist', '|', 'emoticons', 'image', 'link'],
            afterBlur: function () { this.sync(); }
        });
        editor2 = K.create('#e_SellerMemo', {
            resizeType: 1,
            allowPreviewEmoticons: false,
            allowImageUpload: false,
            items: [
                'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold', 'italic', 'underline',
                'removeformat', '|', 'justifyleft', 'justifycenter', 'justifyright', 'insertorderedlist',
                'insertunorderedlist', '|', 'emoticons', 'image', 'link'],
            afterBlur: function () { this.sync(); }
        });
        editor3 = K.create('#e_CutOffMemo', {
            resizeType: 1,
            allowPreviewEmoticons: false,
            allowImageUpload: false,
            items: [
                'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold', 'italic', 'underline',
                'removeformat', '|', 'justifyleft', 'justifycenter', 'justifyright', 'insertorderedlist',
                'insertunorderedlist', '|', 'emoticons', 'image', 'link'],
            afterBlur: function () { this.sync(); }
        });
    });

    $(function () {
        // 控制产品费用只读状态
        //// debugger;
        if ("@Model.IsFreight" == "1" && "@ViewData["UserRole"]" == "7") {
            $("#e_ProductFees").removeAttr("readonly");
        } else {
            $("#e_ProductFees").attr("readonly", "readonly");
        }

        $('#dg_product').datagrid({
            url: '@Url.Action("List", "OrderProduct")/@ViewData["id"]',
            width: 750,
            height: 200,
            toolbar: [{
                id: 'btnadd',
                text: '添加',
                iconCls: 'icon-add',
                handler: function () {
                    $('#btnsave').linkbutton('enable');
                    addp();
                }
            }, {
                id: 'btndel',
                text: '删除',
                iconCls: 'icon-add',
                handler: function () {
                    $.messager.confirm("提示", "您确定要删除吗？", function (r) {
                        if (r) {
                            if (editIndex == undefined) {
                                return;
                            }
                            $('#dg_product').datagrid('cancelEdit', editIndex)
                                .datagrid('deleteRow', editIndex);
                            editIndex = undefined;
                        }
                    });

                }
            }, {
                id: 'btnsave',
                text: '保存',
                iconCls: 'icon-save',
                handler: function () {
                    accept();
                }
            }],
            onClickRow: onClickRow
        });

        $('#e_CurrencyCode').combogrid({
            panelWidth: 360,
            idField: 'CurrencyCode',
            textField: 'CurrencyCode',
            url: '/Currency/QList',
            fit: true,
            columns: [[
                { field: 'CurrencyName', title: '货币', width: 150 },
                { field: 'CurrencyCode', title: '代码', width: 100 },
                { field: 'CurrencyValue', title: '汇率', width: 100 }
            ]]
        });

        $('#e_LogisticMode').combogrid({
            panelWidth: 360,
            idField: 'LogisticsCode',
            textField: 'LogisticsName',
            url: '/LogisticsMode/ALLList',
            fit: true,
            keyHandler: {
                query: function (q) {
                    $('#e_LogisticMode').combogrid("textbox").val(q);
                },
                enter: function () {
                    query = $('#e_LogisticMode').combogrid("textbox").val();
                    $('#e_LogisticMode').combogrid({
                        url: '/LogisticsMode/ALLList',
                        queryParams: { q: query }
                    });
                    $('#e_LogisticMode').combogrid("setValue", query);
                }
            },
            columns: [[
                { field: 'LogisticsName', title: '名称', width: 250 },
                { field: 'LogisticsCode', title: '代码', width: 100 }
            ]]
        });


        $('#dg_record').datagrid({
            url: '@Url.Action("Record", "Order")/@ViewData["id"]',
            width: 1250,
            height: 240
        })

        $('#dg_connect').datagrid({
            url: '@Url.Action("Connect", "Order")/@ViewData["id"]',
            width: 1250,
            height: 240
        })
    });

    function changeCountry(v) {
        $('#e_Country').combogrid({
            panelWidth: 360,
            idField: 'ECountry',
            textField: 'ECountry',
            url: '/Country/ListALL',
            fit: true,
            editable: false,
            columns: [[
                { field: 'CCountry', title: '中文', width: 150 },
                { field: 'ECountry', title: '英文', width: 100 },
                { field: 'CountryCode', title: '简码', width: 100 }
            ]]

        });
        $('#btn').unbind("focus");
        $('#e_Country').combogrid('setValue', v);
    }
    var editIndex = undefined;
    var editIndex1 = undefined;
    function endEditing() {
        if (editIndex == undefined) {
            return true;
        }
        if ($('#dg_product').datagrid('validateRow', editIndex)) {

            $('#dg_product').datagrid('endEdit', editIndex);
            editIndex = undefined;
            return true;
        } else {
            return false;
        }
    }

    function onClickRow(index) {
        if (editIndex != index) {
            if (endEditing()) {
                $('#dg_product').datagrid('selectRow', index)
                    .datagrid('beginEdit', index);
                editIndex = index;
            } else {
                $('#dg_product').datagrid('selectRow', editIndex);
            }
        }
    }
    function onClickRow1(index) {
        // debugger;
        if (editIndex1 != index) {
            if (endEditing1()) {
                $('#dg_p').datagrid('selectRow', index)
                    .datagrid('beginEdit', index);
                editIndex1 = index;
            } else {
                $('#dg_p').datagrid('selectRow', editIndex1);
            }
        }
    }
    function endEditing1() {
        // debugger;
        if (editIndex1 == undefined) {
            return true;
        }
        if ($('#dg_p').datagrid('validateRow', editIndex1)) {
            var t1 = $('#dg_p').datagrid('getRows')[editIndex1]['Qty'];
            var t2 = $('#dg_p').datagrid('getEditor', { index: editIndex1, field: 'Qty' }).target.numberbox("getValue");
            if (t1 < t2) {
                alert("数量不能大于原来的数量:");
                return false;
            }
            $('#dg_p').datagrid('endEdit', editIndex1);
            editIndex1 = undefined;
            return true;
        } else {
            return false;
        }
    }

    function addp() {
        if (endEditing()) {
            $('#dg_product').datagrid('appendRow', { Qty: 1, Price: 0 });
            editIndex = $('#dg_product').datagrid('getRows').length - 1;
            $('#dg_product').datagrid('selectRow', editIndex)
                .datagrid('beginEdit', editIndex);
        }
    }

    function accept() {
        if (endEditing()) {
            $('#dg_product').datagrid('acceptChanges');
        }
    }

    function addOrder() {
        var effectRow = new Object();
        if (endEditing()) {
            $('#dg_product').datagrid('acceptChanges');
        }
        effectRow["rows"] = JSON.stringify($('#dg_product').datagrid("getRows"));
        $("#rows").val(JSON.stringify($('#dg_product').datagrid("getRows")));

        formPost('e_form', '@Url.Action("Edit", "Order")');
    }
    // 拆分订单
    function splitOrder(x) {
        //debugger;
        if ('@Model.Status' == "已发货") {
            alert("禁止对已发货订单操作!");
            return;
        }
        $('#divm').hide();
        if (x == 0) {
            if ("@Model.Status" == "已处理" || "@Model.Status" == "待拣货") {
                showProduct("缺货拆分--选择产品", function () {
                    if (endEditing1()) {
                        var effectRow = new Object();
                        effectRow["o"] = '@ViewData["id"]';
                        effectRow["rows"] = JSON.stringify($('#dg_p').datagrid("getSelections"));
                        $.post("/Order/EditSplitOrder/", effectRow, function (rsp) {
                            $('#dlg').dialog('close');
                            if (rsp.IsSuccess) {
                                alert("提交成功！");
                            }
                        }, "JSON").error(function () {
                            alert("提交错误！");

                        });
                    }
                });
            } else {
                alert("只有未配货的的订单才能缺货拆包");
            }
        } else {
            if ("@Model.Status" == "已处理") {
                $.messager.prompt('发货拆分--输入分包数量', '请输入还需要发货的包裹的数值', function (r) {
                    if (r) {
                        var effectRow = new Object();
                        effectRow["o"] = '@ViewData["id"]';
                        effectRow["c"] = r;
                        $.post("/Order/EditSplitSendOrder/", effectRow, function (rsp) {

                            if (rsp.IsSuccess) {
                                alert("提交成功！");
                            }
                        }, "JSON").error(function () {
                            alert("提交错误！");

                        });
                    }
                });
            } else {
                alert("只有待包装的订单才能发货拆包");
            }
        }
    }

    function reOrder() {
       @* if ('@Model.Status' == "已发货") {
            alert("禁止对已发货订单操作!");
            return;
        }*@
        if ('@Model.Account'.indexOf("yw") != -1) {
            $('#dg_p').datagrid({ closed: false });
            $('#divm').show();
            showProduct("重发", function () {
                if (endEditing1()) {
                    var effectRow = new Object();
                    effectRow["o"] = '@ViewData["id"]';
                    effectRow["m"] = $('#m').val();
                    if ($('#m').val() == "") {
                        alert("请输入重发原因！");
                        return;
                    }

                    effectRow["rows"] = JSON.stringify($('#dg_p').datagrid("getSelections"));
                    $.post("/Order/EditReOrder/", effectRow, function (rsp) {
                        $('#dlg').dialog('close');
                        if (rsp.IsSuccess) {
                            alert("提交成功！");

                        }
                    }, "JSON").error(function () {
                        alert("提交错误！");
                    });
                }
            });
        }
        else
        {
            var username = $('#cc option:selected').val();
            $('#s_dlg').show();
            $("#s_dlg").dialog({
                title: '主管监控',
                modal: true,
                loadingMessage: '正在加载...',
                buttons: [{
                    text: '提交',
                    iconCls: 'icon-ok',
                    handler: function () {
                        jQuery.ajax({
                            url: "/Order/CheckreOrderPass",
                            type: "post",
                            data: "p=" + $('#txtPass').val() + "&username=" + $('#cc option:selected').val(),
                            success: function (rrr) {
                                if (rrr.IsSuccess) {
                                    alert(rrr.Msg);
                                    $('#s_dlg').dialog('close');
                                    $.messager.confirm("提示", "确定要新建重复订单吗？", function (r) {
                                        if (r) {
                                            //  #
                                            $('#dg_p').datagrid({ closed: false });
                                            $('#divm').show();

                                            showProduct("重发", function () {
                                                if (endEditing1()) {
                                                    var effectRow = new Object();
                                                    effectRow["o"] = '@ViewData["id"]';
                                                    effectRow["m"] = $('#m').val();
                                                    if ($('#m').val() == "") {
                                                        alert("请输入重发原因！");
                                                        return;
                                                    }
                                                    effectRow["rows"] = JSON.stringify($('#dg_p').datagrid("getSelections"));
                                                    $.post("/Order/EditReOrder/", effectRow, function (rsp) {
                                                        $('#dlg').dialog('close');
                                                        if (rsp.IsSuccess) {
                                                            alert("提交成功！");
                                                        }
                                                    }, "JSON").error(function () {
                                                        alert("提交错误！");
                                                    });
                                                }
                                            });
                                            //# 
                                        }
                                    });
                                } else {
                                    alert(rrr.Msg);
                                }
                            }
                        });

                    }
                }, {
                    text: '取消',
                    handler: function () {
                        $('#s_dlg').dialog('close');
                    }
                }]
            }).dialog('open');
        }

    }

    function showProduct(title, handle) {
        // debugger;
        $('#dg_p').datagrid({
            url: '@Url.Action("List", "OrderProduct")/@ViewData["id"]',
            width: 700,
            onClickRow: onClickRow1
        });

        $('#dlg').dialog({
            width: 750,
            title: title,
            modal: true,
            loadingMessage: '正在加载...',
            buttons: [{
                text: '提交',
                iconCls: 'icon-ok',
                handler: handle
            }, {
                text: '取消',
                handler: function () {
                    $('#dlg').dialog('close');
                }
            }]
        }).dialog('open');
    }

    function skuSelect(r) {

        var ed = $('#dg_product').datagrid('getEditor', { index: editIndex, field: 'SKU' });

        var p = $(ed.target).combogrid('grid').datagrid("getRows")[r].Standard;

        if (editIndex != undefined)
            ed = $('#dg_product').datagrid('getEditor', { index: editIndex, field: 'Standard' });

        $(ed.target).val(p);
    }

    function xujiasend() {
        if ('@Model.Status' == "已发货") {
            alert("禁止对已发货订单操作!");
            return;
        }
        $.post("/Order/SendByXuJia/", "a=@Model.Id", function (rsp) {
            $('#m_dlg').dialog('close');

            alert(rsp.Msg);

        }, "JSON").error(function () {
            alert("提交错误！");

        });
    }

    function mOrder() {
        if ('@Model.Status' == "已发货") {
            alert("禁止对已发货订单操作!");
            return;
        }
        if (("@Model.Status" == "已处理" || "@Model.Status" == "待拣货")&&("@Model.IsPrint" == 0) ) {
            $('#m_dlg').dialog({
                width: 300,
                title: '合并订单',
                modal: true,
                loadingMessage: '正在加载...',
                buttons: [{
                    text: '取消',
                    handler: function () {
                        $('#m_dlg').dialog('close');
                    }
                }]
            }).dialog('open');
        } else {
            if ("@Model.IsPrint" != 0) {
                alert("该订单面单已打印！合并前先【设置为未打印】");
            }
            else {
                alert("只有已处理订单才能合并！");
            }
        }

    }
    // 合并订单
    function mergerOrder() {
        if ('@Model.Status' == "已发货") {
            alert("禁止对已发货订单操作!");
            return;
        }
        $.post("/Order/MergerOrder/", "a=" +@Model.Id +"&b=" + $("#txtMOrderNo").val(), function (rsp) {
            $('#m_dlg').dialog('close');
            if (rsp.IsSuccess) {
                $("#txtMOrderNo").val("");
                alert("提交成功！");
                location.reload();
            } else {
                alert(rsp.Msg);
            }
        }, "JSON").error(function () {
            alert("提交错误！");

        });
    }

    function split(v, r, i) {
        if (r.IsSplit != '0')
            return "拆分订单";
        if (r.IsRepeat != '0')
            return "重发订单";
    }
    function dealtime(v, r, i) {
        return "同步：" + getDate(v) + "<br>扫描：" + getDate(r.ScanningOn);
    }
    function Logistic(v, r, i) {
        var t = r.TrackCode;
        if (t == null)
            t = "";
        return "发货方式：" + v + "<br>追踪码：" + t;
    }

    function GetAmount(v, r, i) {
        var html = v + ":" + r.Amount;
        return html;
    }

    function editOrderByFBA(v) {
        if ('@Model.Status' == "已发货") {
            alert("禁止对已发货订单操作!");
            return;
        }
        jQuery.ajax({
            url: "/Order/EditOrderByFBA",
            data: "ids=@Model.Id&f=" + v,
            type: "post",
            success: function (sss) {
                if (sss.IsSuccess == true) {
                    alert("成功！");
                    window.location.reload();
                } else {
                    alert("失败！" + sss.ErrorMsg);
                }
            }
        });
    }
    function editOrderXinyi()
    {
        if ('@Model.Status' == "已发货") {
            alert("禁止对已发货订单操作!");
            return;
        }
        jQuery.ajax({
            url: "/Order/editOrderXinyi",
            data: "ids=@Model.Id",
            type: "post",
            success: function (sss) {
                if (sss.IsSuccess == true) {
                    alert("成功！");
                    window.location.reload();
                } else {
                    alert("失败！" + sss.ErrorMsg);
                }
            }
        });
    }
    function reSetFBA(v) {
        jQuery.ajax({
            url: "/Order/ReSetFBA",
            data: "id=@Model.Id",
            type: "post",
            success: function (sss) {
                alert(sss.Msg);
                window.location.reload();
            }
        });
    }
</script>
<body class="easyui-layout">
    <div region="center">

        @using (Html.BeginForm("Create", "Order", FormMethod.Post, new { id = "e_form" }))
        {
            <a href="#" class="easyui-linkbutton" onclick="addOrder();">保存</a>  
            <a href="#" class="easyui-linkbutton" onclick="splitOrder(0);">缺货拆分</a>  
            <a href="#" class="easyui-linkbutton" onclick="splitOrder(1);">发货拆分</a>  
            <a href="#" class="easyui-linkbutton" onclick="reOrder();">新建重复订单</a>
            <a href="#" class="easyui-linkbutton" onclick="mOrder();">合并订单</a>
            <a href="#" class="easyui-linkbutton" onclick="xujiasend();">虚假发货</a>  
            <a href="#" class="easyui-menubutton" data-options="menu:'#mm1',iconCls:'icon-redo'">设置海外仓</a>
            <div id="mm1" style="width: 150px;">
                <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA');">亚马逊FBA</div>
                <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('ST');">赛兔</div>
                <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('CKY');">出口易</div>
                <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('YWRU-AEA');">YWRU-AEA仓库</div>
                <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('YWRU-AEB');">YWRU-AEB仓库</div>
                <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('NBRU-AEA');">NBRU-AEA仓库</div>
                    <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('YWMRU-AEA');">YWMRU-AEA仓库</div>
                       <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('YWMRU-AEB');">YWMRU-AEB仓库</div>
                <div class="menu-sep"></div>
                <div>
                    <span>(宁波)海外仓发货扣库存</span>
                    <div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('KS');">KS仓库(宁波)</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('US-East');">美东(宁波)</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('GCUS-East');">谷仓美东（宁波）</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('GCUS-West');">谷仓美西（宁波）</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderXinyi();">鑫弈仓库（自动）</div>
                    </div>
                </div>

                <div class="menu-sep"></div>
                <div>
                    <span>(义乌)海外仓发货扣库存</span>
                    <div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('LAI');">LAI仓库</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('KS-YW');">KS仓库(义乌)</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('CA');">美东(义乌)</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('UKMAN');">UKMAN仓库</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('YWAZDE');">德国三方海外仓</div>
                          <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('YWGCUS-West');">谷仓美西(义乌)</div>
                         <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('YWGCUS-East');">谷仓美东(义乌)</div>
                          <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('YWCA-WEST(DONG)');">美西(董)</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('YWNJ-EAST(LEO)');">美东(LEO)</div>
                    </div>
                </div>

                <div class="menu-sep"></div>
                <div>
                    <span>(宁波)代发货扣库存</span>
                    <div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-NB01');">(代发)FBA-NB01</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-NB02');">(代发)FBA-NB02</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-NB03');">(代发)FBA-NB03</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-NB04');">(代发)FBA-NB04</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-NB05');">(代发)FBA-NB05</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-NB06');">(代发)FBA-NB06</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-NB07');">(代发)FBA-NB07</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-NB08');">(代发)FBA-NB08</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-NB09');">(代发)FBA-NB09</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBC-NBCD01');">(代发)FBC-NBCD01</div>
                    </div>
                </div>
                 <div class="menu-sep"></div>
                <div>
                    <span>(义乌)代发货扣库存</span>
                    <div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-YWAZUS');">(代发)FBA-YWAZUS</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-YWAZUS01');">(代发)FBA-YWAZUS01</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-YWAZUS02');">(代发)FBA-YWAZUS02</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-YWAZUK');">(代发)FBA-YWAZUK</div>
                         <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-YWAZUK02');">(代发)FBA-YWAZUK02</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-YWAZDE');">(代发)FBA-YWAZDE</div>
                        <div data-options="iconCls:'icon-redo'" onclick="editOrderByFBA('FBA-YWAZFR');">(代发)FBA-YWAZFR</div>
                    </div>
                </div>
            </div>
            <a href="#" class="easyui-linkbutton" onclick="reSetFBA();">撤回海外仓</a>  
@*
    <a href="#" class="easyui-linkbutton" onclick="splitOrder(1);">标记作废</a>
    <a href="#" class="easyui-linkbutton" onclick="splitOrder(1);">标记正常</a>*@

            <fieldset>
                <legend>订单信息</legend>
                <table class="editForm" style="height: 150px">
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.OrderNo, "订单编号:")
                            <input type="hidden" id="rows" name="rows" />
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.OrderNo, new { @id = "e_OrderNo", @readonly = "readonly" })
                            @Html.HiddenFor(model => model.Id, new { @id = "e_Id" })
                            @Html.HiddenFor(model => model.IsMerger)
                            @Html.HiddenFor(model => model.IsOutOfStock)
                            @Html.HiddenFor(model => model.IsPrint)
                            @Html.HiddenFor(model => model.IsError)
                            @Html.HiddenFor(model => model.IsRepeat)
                            @Html.HiddenFor(model => model.Enabled)
                            @Html.HiddenFor(model => model.IsSplit)
                            @Html.HiddenFor(model => model.IsAudit)
                            @Html.HiddenFor(model => model.IsFreight)
                            @Html.HiddenFor(model => model.Platform)
                            @Html.HiddenFor(model => model.ErrorInfo)
                            @Html.HiddenFor(model => model.IsXu)
                            @Html.HiddenFor(model => model.Account)
                            @Html.HiddenFor(model => model.ScanningOn)
                            @Html.HiddenFor(model => model.ScanningBy)
                            @Html.HiddenFor(model => model.GenerateOn)
                            @Html.HiddenFor(model => model.IsFBA)
                            @Html.HiddenFor(model => model.FBABy)
                            @Html.HiddenFor(model => model.CreateOn)
                            @Html.HiddenFor(model => model.Status)
                            @Html.HiddenFor(model => model.MId)
                            @Html.HiddenFor(model => model.RMB)
                            @Html.HiddenFor(model=>model.FanState)
                            @Html.HiddenFor(model=>model.FanAmount)
                            @Html.HiddenFor(model=>model.Account, new { @id = "e_Account"})
                            
                        </td>
                        <td>
                            @Html.LabelFor(model => model.OrderExNo, "外部编号:")

                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.OrderExNo, new { @id = "e_OrderExNo", @readonly = "readonly" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.Amount, "总金额:")
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.CurrencyCode, new { @id = "e_CurrencyCode" })<br />
                            @Html.TextBoxFor(model => model.Amount, new { @id = "e_Amount" })
                        </td>
                        <td>
                            @Html.LabelFor(model => model.TId, "流水交易号:")
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.TId, new { @id = "e_TId" })
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.BuyerName, "买家:")
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.BuyerName, new { @id = "e_BuyerName" })
                        </td>
                        <td>
                            @Html.LabelFor(model => model.BuyerEmail, "买家邮箱:")
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.BuyerEmail, new { @id = "e_BuyerEmail" })
                            @Html.HiddenFor(model => model.BuyerId, new { @id = "e_BuyerId" })
                        </td>
                    </tr>
                </table>
            </fieldset>
            <div id="tt" class="easyui-tabs" style="width: 1350px; height: 300px;">
                <div title="产品信息" style="padding: 20px;">
                    <table id="dg_product" class="easyui-datagrid" rownumbers="true" singleselect="true">
                        <thead>
                            <tr>
                                <th field="ExSKU" width="80" data-options="editor:'text'">ExSKU
                                </th>
                                <th field="Title" width="100" data-options="editor:'text'">名称
                                </th>
                                <th field="SKU" width="80" data-options="
                        editor:{
							type:'combogrid',
							options:{
								panelWidth:410,
                                mode: 'remote',
                                idField: 'SKU',
                                textField: 'SKU',
                                required:true,
                                url: '/Product/ListQ',
                                fit: true,
                                onSelect:skuSelect,
                                columns: [[
                                    { field: 'SKU', title: 'SKU', width: 100 },
                                    { field: 'ProductName', title: 'Title', width: 200 },
                                    { field: 'Standard', title: '规格', width: 100 }

                                ]]
							}
						}
                        ">SKU
                                </th>
                                <th field="Qty" width="80" data-options="editor:{ type: 'numberbox'}">数量
                                </th>
                                <th field="Standard" width="80" data-options="editor:'text'">规格
                                </th>
                                <th field="Remark" width="100" data-options="editor:'text'">描述
                                </th>
                                <th field="Price" width="80" data-options="editor:{ type: 'numberbox', options: { precision: 5 }}">
                                价格

                            <th field="Url" width="100" data-options="editor:'text'">网址
                            </th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div title="地址信息" style="overflow: auto; padding: 20px;">
                    <table class="editForm">
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.LogisticMode, "发货方式:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.LogisticMode, new { @id = "e_LogisticMode" })
                            </td>
                            <td>追踪码</td>
                            <td>
                                @Html.TextBoxFor(model => model.TrackCode, new { @id = "e_TrackCode" })
                                @Html.HiddenFor(model => model.AddressId, new { @id = "e_AddressId" })
                            </td>
                        </tr>
                        <tr>

                            <td>重量</td>
                            <td colspan="3">

                                @Html.TextBoxFor(model => model.Weight, new { @id = "e_Weight" })

                            </td>
                        </tr>

                        <tr>
                            <td>
                                @Html.LabelFor(model => model.AddressInfo.Addressee, "收件人:")
                            </td>
                            <td>
                                @Html.HiddenFor(model => model.AddressInfo.Id)
                                @Html.TextBoxFor(model => model.AddressInfo.Addressee, new { @id = "e_Addressee" })
                            </td>
                            <td>
                                @Html.LabelFor(model => model.AddressInfo.PostCode, "邮编:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.AddressInfo.PostCode, new { @id = "e_PostCode" })
                            </td>
                        </tr>

                        <tr>
                            <td>
                                @Html.LabelFor(model => model.AddressInfo.Tel, "电话:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.AddressInfo.Tel, new { @id = "e_Tel" })
                            </td>
                            <td>
                                @Html.LabelFor(model => model.AddressInfo.Phone, "手机:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.AddressInfo.Phone, new { @id = "e_Phone" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.AddressInfo.Street, "街道:")
                            </td>
                            <td colspan="3">
                                @Html.TextBoxFor(model => model.AddressInfo.Street, new { @id = "e_Street", @style = "width:351px;" })
                            </td>
                        </tr>

                        <tr>
                            <td>
                                @Html.LabelFor(model => model.AddressInfo.County, "区:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.AddressInfo.County, new { @id = "e_County" })
                            </td>
                            <td>
                                @Html.LabelFor(model => model.AddressInfo.City, "市:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.AddressInfo.City, new { @id = "e_City" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.AddressInfo.Province, "省:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.AddressInfo.Province, new { @id = "e_Province" })
                            </td>
                            <td>
                                @Html.LabelFor(model => model.AddressInfo.Country, "国家:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.AddressInfo.Country, new { @id = "e_Country", @onfocus = "changeCountry(this.value);" })
                                @Html.HiddenFor(model => model.AddressInfo.CountryCode, new { @id = "e_CountryCode" })
                            </td>
                        </tr>
                    </table>
                </div>
                <div title="留言信息" style="padding: 20px;">
                    <table class="editForm">
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.BuyerMemo, "买家留言:")
                            </td>
                            <td>
                                @Html.TextAreaFor(model => model.BuyerMemo, new { @id = "e_BuyerMemo", @style = "width:600px;resize:none" })
                            </td>
                        </tr>

                        <tr>
                            <td>
                                @Html.LabelFor(model => model.SellerMemo, "商家留言:")
                            </td>
                            <td>
                                @Html.TextAreaFor(model => model.SellerMemo, new { @id = "e_SellerMemo", @style = "width:600px;resize:none" })
                            </td>
                        </tr>

                        <tr>
                            <td>
                                @Html.LabelFor(model => model.CutOffMemo, "包裹截留留言:")
                            </td>
                            <td>
                                @Html.TextAreaFor(model => model.CutOffMemo, new { @id = "e_CutOffMemo", @style = "width:600px;resize:none" })
                            </td>
                        </tr>
                    </table>
                </div>
                <div title="利润计算" style="padding: 20px;">
                    <table class="editForm">
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.ProductFees, "产品费用:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.ProductFees, new { @id = "e_ProductFees", @readonly = "readonly" })
                            </td>
                            <td>
                                @Html.LabelFor(model => model.Freight, "运费:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.Freight, new { @id = "e_Freight" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                @Html.LabelFor(model => model.Profit, "利润:")
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.Profit, new { @id = "e_Profit", @readonly = "readonly" })
                            </td>

                        </tr>

                    </table>
                </div>
                <div title="订单日志" style="padding: 20px;">
                    <table id="dg_record" class="easyui-datagrid" rownumbers="true" singleselect="true">
                        <thead>
                            <tr>
                                <th field="RecordType" width="150">类型
                                </th>
                                <th field="Content" width="800">内容
                                </th>
                                <th field="CreateBy" width="60">处理人
                                </th>
                                <th field="CreateOn" width="200" formatter="getDate">处理时间
                                </th>
                            </tr>
                        </thead>
                    </table>

                </div>
                <div title="关联订单" style="padding: 20px;">
                    <table id="dg_connect" class="easyui-datagrid" rownumbers="true" singleselect="true">
                        <thead>
                            <tr>
                                <th field="OrderExNo" width="150">平台编号
                                </th>
                                <th field="OrderNo" width="150">订单编号
                                </th>
                                <th field="Status" width="150">订单状态
                                </th>
                                <th field="CurrencyCode" width="150" formatter="GetAmount">货币
                                </th>
                                <th field="Weight" width="100">重量
                                </th>
                                <th field="LogisticMode" width="300" formatter="Logistic">发货方式
                                </th>
                                <th field="IsSplit" width="100" formatter="split">关联方式
                                </th>
                                <th field="CreateOn" width="200" formatter="dealtime">处理时间
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        }

        <div id="dlg" class="easyui-dialog" closed="true">
            <table id="dg_p" class="easyui-datagrid" rownumbers="true">
                <thead>
                    <tr>
                        <th data-options="field:'Id',checkbox:true"></th>
                        <th field="ExSKU" width="80">ExSKU
                        </th>
                        <th field="Title" width="100">名称
                        </th>
                        <th field="SKU" width="80">SKU
                        </th>
                        <th field="Qty" width="80" data-options="editor:{ type: 'numberbox'}">数量
                        </th>
                        <th field="Remark" width="100">描述
                        </th>
                    </tr>
                </thead>
            </table>
            <div id="divm">
                <h3>重发原因:</h3>
                <textarea id="m" rows="3" style="width: 700px;"></textarea>
            </div>
        </div>

        <div id="m_dlg" class="easyui-dialog" closed="true">
            合并的订单号:<input type="text" id="txtMOrderNo" />
            <input type="button" value="确定" onclick="mergerOrder()" />
        </div>

        <div id="s_dlg" style="display: none">
            <table>
                <tr>
                    <td>主管人:
                        <select id="cc" style="width: 200px;">
                            <option value="zln">张林楠</option>
                            <option value="hgb">胡公博</option>
                            <option value="zxx">张小雪</option>
                            <option value="zxj">曾学俊</option>
                            <option value="myh">毛宇慧</option>
                            <option value="hwk">黄伟坤</option>
                            <option value="zcp">张春平</option>
                            <option value="why">王红燕</option>
                            <option value="mj">梅剑</option>
                            <option value="admin">管理员</option>
                        </select>
                    </td>

                </tr>
                <tr>
                    <td>密码：</td>
                </tr>
                <tr>
                    <td> <input type="text" id="txtPass" /></td>
                </tr>

            </table>
        </div>

    </div>
</body>
